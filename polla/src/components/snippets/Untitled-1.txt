<template>
  <div v-if="datosUsuarioWordpress.userlogged">
{{ nombrePollero }} - partidos procesados {{ partidosProcesados.length}} --- {{ puntosPollero.puntos }}
 <p v-if="puestoPollero"> Posición: {{ puestoPollero.pos }} </p>
  
<v-layout row wrap>    









<v-flex xs12>
<b-table v-if="posicionesNumericas"
            :data="posicionesNumericas"
            :paginated="true"
            :per-page="4"
            :bordered="isBordered"
            :striped="isStriped"
            :narrowed="isNarrowed"
            :hoverable="isHoverable"
            :loading="isLoading"
            :mobile-cards="hasMobileCards">
            
            <template slot-scope="props">
                <b-table-column label="POS." >
                    {{ props.row.pos }}
                </b-table-column>
                <b-table-column field="pollero" label="Pollero" sortable>
                    <v-btn round color="red lighten-2" dark @click="cam(props.row)">{{ props.row.pollero }}</v-btn>
                </b-table-column>
                <b-table-column label="Pts." >
                    {{ props.row.puntaje }}
                </b-table-column>
                <b-table-column label="GCH" >
                    {{ props.row.GRANCHEPAZO }}
                </b-table-column>
                <b-table-column label="CH" >
                    {{ props.row.EXACTO }}
                </b-table-column>
                <b-table-column label="DBL" >
                    {{ props.row.DOBLE }}
                </b-table-column>
                <b-table-column label="SEN" >
                    {{ props.row.SENCILLO }}
                </b-table-column>
                <b-table-column label="0*" >
                    {{ props.row.BLANCOCONCOMODIN }}
                </b-table-column>
                <b-table-column label="0" >
                    {{ props.row.BLANCOSIMPLE }}
                </b-table-column>
                <b-table-column label="COM" >
                    {{ props.row.USOCOM }}
                </b-table-column>

                
            </template>
            <template slot="empty">
                <section class="section">
                    <div class="content has-text-grey has-text-centered">
                        <p>
                            <b-icon
                                icon="emoticon-sad"
                                size="is-large">
                            </b-icon>
                        </p>
                        <p>Cargando datos</p>
                    </div>
                </section>
            </template>
        </b-table>

</v-flex>

<v-flex xs10 offset-xs1>
        <v-card color="purple">
<!--

<vue-good-table v-if="posicionesNumericas"
      title="Posiciones"
      :columns="columnas"
      :rows="posicionesNumericas"
      :paginate="false"
      :lineNumbers="false"
      :globalSearch="true"
      globalSearchPlaceholder="Encuéntrate"
      nextText="Siguiente"
      prevText="Anterior"
      :responsive="true"
      styleClass="table condensed">

<template slot="table-column" slot-scope="props">
     <span v-if="props.column.field =='GRANCHEPAZO'" class="np_manito">
        <i class="material-icons">star_border</i> {{props.column.label}}
     </span>
     <span v-else-if="props.column.field == 'DOBLE'" class="np_manito">
        <i class="material-icons">star_border</i> {{props.column.label}}
     </span>
     <span v-else-if="props.column.field == 'BLANCOCONCOMODIN'" class="np_manito">
        <i class="material-icons">star_border</i> {{props.column.label}}
     </span>
     <span v-else class="np_manito">
        {{props.column.label}}
     </span>
  </template>    
  <template slot="table-row" scope="props">
    <td>{{ props.row.pos }}</td>
    <td @click="cam(props.row)" class="np_pollero_tablapos">{{ props.row.pollero }}</td>
    <td>{{ props.formattedRow.puntaje }}</td>
    <td class="fancy">{{ props.row.GRANCHEPAZO }}</td>
    <td class="fancy">{{ props.row.EXACTO }}</td>
    <td class="fancy">{{ props.row.DOBLE }}</td>
    <td class="fancy">{{ props.row.SENCILLO }}</td>
    <td class="fancy">{{ props.row.BLANCOCONCOMODIN }}</td>
    <td class="fancy">{{ props.row.BLANCOSIMPLE }}</td>
    <td class="fancy">{{ props.row.USOCOM }}</td>
  </template>


      </vue-good-table>
-->
          
        </v-card>
      </v-flex>
</v-layout>

<template>
  <v-layout row justify-center>
    <v-dialog v-model="usuariodetalles" max-width="600">
          <v-layout v-if="datosAdicionalesPollero" row wrap :class="'np_perfil'+datosAdicionalesPollero.genero">
            <v-flex xs6>
          <Flashcard v-cloak v-if="usuariodetalles"
          colorBack="#FFC800"
          :puntajes= "datosOtrosPolleros"
          :headerFront="datosOtrosPolleros.pollero"
          :headerBack="datosOtrosPolleros.pollero"
          :footerFront="datosOtrosPolleros.partidos" 
          :footerBack="datosOtrosPolleros.puntaje" 
          :front="datosOtrosPolleros.puntaje">
          </Flashcard>
            </v-flex>
            <v-flex xs6>
            <div v-if="datosAdicionalesPollero">
              <img :src="'/assets/fpc/'+escudo_FPC(datosAdicionalesPollero.hincha) + '.png'" :alt="escudo_FPC(datosAdicionalesPollero.hincha)" class="np_escudofpc">
            <pre> {{ escudo_FPC(datosAdicionalesPollero.hincha) }} </pre>
            
            <pre> {{ datosAdicionalesPollero.primermundial }} </pre>  
            
            <pre> {{ ( datosAdicionalesPollero.polleroamigo) }} </pre>  
            <!-- 
            <pre> {{ datosAdicionalesPollero.genero }} </pre>  
            -->
            </div> 
            </v-flex>

          </v-layout>
          
    </v-dialog>
    
  </v-layout>
</template>




  </div>
  <div v-else>
    Nada
  </div>
</template>

<script>
var renderTestColumn = function (colname, entry) {
        return '<span>Dr. '+JSON.stringify(entry.pollero)+'</span>';
    };


import { mapState, mapGetters } from 'vuex'
//import VueBootstrapTable from 'vue2-bootstrap-table2'
import Vue from 'vue';
import VueGoodTable from 'vue-good-table';
Vue.use(VueGoodTable);
import Flashcard from './flashcard'

export default {
  components: {
    //VueBootstrapTable,
    Flashcard
  },
  data() {
    return {
      isEmpty: false,
      isBordered: false,
      isStriped: false,
      isNarrowed: false,
      isHoverable: false,
      isLoading: false,
      hasMobileCards: true,

      usuariodetalles: false,
      datosOtrosPolleros: null,
      datosAdicionalesPollero: null,
      onClickFn: function(row, index){
        //this.cam();
        //usuariodetalles =!usuariodetalles;
        //this.datosOtrosPolleros =!this.datosOtrosPolleros
        //polla2018.cam();
        console.log(row); //the object for the row that was clicked on
        console.log(index); // index of the row that was clicked on
      },
      
      errors: [],
      polleros: null,
    }
  },
  computed: {...mapState(['horamostrable', 'datosUsuarioWordpress', 'configuracionPolla', 'allpronos', 'posiciones']), 
  ...mapGetters(['nombrePollero', 'partidosProcesados', 'puntosPollero', 'posicionesNumericas', 'puestoPollero', 'escudoFPC']),
 
  },
  methods:{
    escudo_FPC(equipo){
      var escudo =  this.escudoFPC(equipo)
      return escudo.escudo
    },
    cam(pollero){
      this.datosOtrosPolleros = pollero;
      this.usuariodetalles =!this.usuariodetalles;
      this.datosAdicionalesPollero = (_.filter(this.polleros, {'id': pollero.id_jugador }))[0];

    }

  },
  created() {
    axios.get(`/wp-json/lospolleros/v1/all/`).then(response => {
      this.polleros = response.data
    }).catch(e => {
      this.errors.push(e.message)
    })
  }
}
</script>